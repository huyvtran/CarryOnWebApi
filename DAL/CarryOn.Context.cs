//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CarryOnEntities : DbContext
    {
        public CarryOnEntities()
            : base("name=CarryOnEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Addresses> Addresses { get; set; }
        public virtual DbSet<ReqGoodTransfer> ReqGoodTransfer { get; set; }
        public virtual DbSet<TransportOptions> TransportOptions { get; set; }
        public virtual DbSet<CO01UT> CO01UT { get; set; }
        public virtual DbSet<ReqGoodTransferWithAddresses> ReqGoodTransferWithAddresses { get; set; }
        public virtual DbSet<CO_TOKEN> CO_TOKEN { get; set; }
        public virtual DbSet<CO_VW_USER_TOKEN> CO_VW_USER_TOKEN { get; set; }
    
        public virtual int f_DeleteFromReqGoodTransfer_ByKeyFields(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_DeleteFromReqGoodTransfer_ByKeyFields", idParameter);
        }
    
        public virtual ObjectResult<db_ReqGoodTransferWithAddresses> f_GetAllFieldsFromReqGoodTransfer_ByKeyFields(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<db_ReqGoodTransferWithAddresses>("f_GetAllFieldsFromReqGoodTransfer_ByKeyFields", idParameter);
        }
    
        public virtual int f_InsertIntoReqGoodTransfer(Nullable<System.Guid> id, Nullable<System.Guid> addressFrom, Nullable<System.Guid> addreessDest, Nullable<System.DateTime> dateTransportFixed, Nullable<int> dateTransportType, string dateTransportInfo, Nullable<int> requestState)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            var addressFromParameter = addressFrom.HasValue ?
                new ObjectParameter("AddressFrom", addressFrom) :
                new ObjectParameter("AddressFrom", typeof(System.Guid));
    
            var addreessDestParameter = addreessDest.HasValue ?
                new ObjectParameter("AddreessDest", addreessDest) :
                new ObjectParameter("AddreessDest", typeof(System.Guid));
    
            var dateTransportFixedParameter = dateTransportFixed.HasValue ?
                new ObjectParameter("DateTransportFixed", dateTransportFixed) :
                new ObjectParameter("DateTransportFixed", typeof(System.DateTime));
    
            var dateTransportTypeParameter = dateTransportType.HasValue ?
                new ObjectParameter("DateTransportType", dateTransportType) :
                new ObjectParameter("DateTransportType", typeof(int));
    
            var dateTransportInfoParameter = dateTransportInfo != null ?
                new ObjectParameter("DateTransportInfo", dateTransportInfo) :
                new ObjectParameter("DateTransportInfo", typeof(string));
    
            var requestStateParameter = requestState.HasValue ?
                new ObjectParameter("RequestState", requestState) :
                new ObjectParameter("RequestState", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_InsertIntoReqGoodTransfer", idParameter, addressFromParameter, addreessDestParameter, dateTransportFixedParameter, dateTransportTypeParameter, dateTransportInfoParameter, requestStateParameter);
        }
    
        public virtual int f_UpdateAllFieldsFromReqGoodTransfer_ByKeyFields(Nullable<System.Guid> id, Nullable<System.Guid> addressFrom, Nullable<System.Guid> addreessDest, Nullable<System.DateTime> dateTransportFixed, Nullable<int> dateTransportType, string dateTransportInfo, Nullable<int> requestState)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            var addressFromParameter = addressFrom.HasValue ?
                new ObjectParameter("AddressFrom", addressFrom) :
                new ObjectParameter("AddressFrom", typeof(System.Guid));
    
            var addreessDestParameter = addreessDest.HasValue ?
                new ObjectParameter("AddreessDest", addreessDest) :
                new ObjectParameter("AddreessDest", typeof(System.Guid));
    
            var dateTransportFixedParameter = dateTransportFixed.HasValue ?
                new ObjectParameter("DateTransportFixed", dateTransportFixed) :
                new ObjectParameter("DateTransportFixed", typeof(System.DateTime));
    
            var dateTransportTypeParameter = dateTransportType.HasValue ?
                new ObjectParameter("DateTransportType", dateTransportType) :
                new ObjectParameter("DateTransportType", typeof(int));
    
            var dateTransportInfoParameter = dateTransportInfo != null ?
                new ObjectParameter("DateTransportInfo", dateTransportInfo) :
                new ObjectParameter("DateTransportInfo", typeof(string));
    
            var requestStateParameter = requestState.HasValue ?
                new ObjectParameter("RequestState", requestState) :
                new ObjectParameter("RequestState", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_UpdateAllFieldsFromReqGoodTransfer_ByKeyFields", idParameter, addressFromParameter, addreessDestParameter, dateTransportFixedParameter, dateTransportTypeParameter, dateTransportInfoParameter, requestStateParameter);
        }
    
        public virtual ObjectResult<zUTILS_CreateStoredFromNewTable_fix_injection_Result> zUTILS_CreateStoredFromNewTable_fix_injection(string tableName, string schemaName, string prefixName, string littleBoxDbAndUserPrefix, string user_security_context)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var schemaNameParameter = schemaName != null ?
                new ObjectParameter("SchemaName", schemaName) :
                new ObjectParameter("SchemaName", typeof(string));
    
            var prefixNameParameter = prefixName != null ?
                new ObjectParameter("PrefixName", prefixName) :
                new ObjectParameter("PrefixName", typeof(string));
    
            var littleBoxDbAndUserPrefixParameter = littleBoxDbAndUserPrefix != null ?
                new ObjectParameter("LittleBoxDbAndUserPrefix", littleBoxDbAndUserPrefix) :
                new ObjectParameter("LittleBoxDbAndUserPrefix", typeof(string));
    
            var user_security_contextParameter = user_security_context != null ?
                new ObjectParameter("user_security_context", user_security_context) :
                new ObjectParameter("user_security_context", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<zUTILS_CreateStoredFromNewTable_fix_injection_Result>("zUTILS_CreateStoredFromNewTable_fix_injection", tableNameParameter, schemaNameParameter, prefixNameParameter, littleBoxDbAndUserPrefixParameter, user_security_contextParameter);
        }
    
        public virtual ObjectResult<db_ReqGoodTransfer> GetAllReqGoodTransfer_ByKeyFields(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<db_ReqGoodTransfer>("GetAllReqGoodTransfer_ByKeyFields", idParameter);
        }
    
        public virtual ObjectResult<db_ReqGoodTransferWithAddresses> f_GetAllFieldsFromReqGoodTransfer_BySomeEqualFields(Nullable<System.Guid> id, Nullable<System.Guid> addressFrom, Nullable<System.Guid> addreessDest, Nullable<System.DateTime> dateTransportFixed, Nullable<int> dateTransportType, string dateTransportInfo, Nullable<int> requestState)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(System.Guid));
    
            var addressFromParameter = addressFrom.HasValue ?
                new ObjectParameter("AddressFrom", addressFrom) :
                new ObjectParameter("AddressFrom", typeof(System.Guid));
    
            var addreessDestParameter = addreessDest.HasValue ?
                new ObjectParameter("AddreessDest", addreessDest) :
                new ObjectParameter("AddreessDest", typeof(System.Guid));
    
            var dateTransportFixedParameter = dateTransportFixed.HasValue ?
                new ObjectParameter("DateTransportFixed", dateTransportFixed) :
                new ObjectParameter("DateTransportFixed", typeof(System.DateTime));
    
            var dateTransportTypeParameter = dateTransportType.HasValue ?
                new ObjectParameter("DateTransportType", dateTransportType) :
                new ObjectParameter("DateTransportType", typeof(int));
    
            var dateTransportInfoParameter = dateTransportInfo != null ?
                new ObjectParameter("DateTransportInfo", dateTransportInfo) :
                new ObjectParameter("DateTransportInfo", typeof(string));
    
            var requestStateParameter = requestState.HasValue ?
                new ObjectParameter("RequestState", requestState) :
                new ObjectParameter("RequestState", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<db_ReqGoodTransferWithAddresses>("f_GetAllFieldsFromReqGoodTransfer_BySomeEqualFields", idParameter, addressFromParameter, addreessDestParameter, dateTransportFixedParameter, dateTransportTypeParameter, dateTransportInfoParameter, requestStateParameter);
        }
    
        public virtual int f_DeleteFromCO01UT_ByKeyFields(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_DeleteFromCO01UT_ByKeyFields", iDParameter);
        }
    
        public virtual ObjectResult<db_CO01UT> f_GetAllFieldsFromCO01UT_ByKeyFields(Nullable<System.Guid> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<db_CO01UT>("f_GetAllFieldsFromCO01UT_ByKeyFields", iDParameter);
        }
    
        public virtual ObjectResult<db_CO01UT> f_GetAllFieldsFromCO01UT_BySomeEqualFields(Nullable<System.Guid> iD, string uTEN, string tIPU, string pASS, Nullable<short> pWGG, Nullable<System.DateTime> pWSC, string nOME, string lANG, string eMAI, string tELE, string fAXN, string uFFI, string rIF1, string rIF2, string tELE2, Nullable<System.Guid> aDR_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var uTENParameter = uTEN != null ?
                new ObjectParameter("UTEN", uTEN) :
                new ObjectParameter("UTEN", typeof(string));
    
            var tIPUParameter = tIPU != null ?
                new ObjectParameter("TIPU", tIPU) :
                new ObjectParameter("TIPU", typeof(string));
    
            var pASSParameter = pASS != null ?
                new ObjectParameter("PASS", pASS) :
                new ObjectParameter("PASS", typeof(string));
    
            var pWGGParameter = pWGG.HasValue ?
                new ObjectParameter("PWGG", pWGG) :
                new ObjectParameter("PWGG", typeof(short));
    
            var pWSCParameter = pWSC.HasValue ?
                new ObjectParameter("PWSC", pWSC) :
                new ObjectParameter("PWSC", typeof(System.DateTime));
    
            var nOMEParameter = nOME != null ?
                new ObjectParameter("NOME", nOME) :
                new ObjectParameter("NOME", typeof(string));
    
            var lANGParameter = lANG != null ?
                new ObjectParameter("LANG", lANG) :
                new ObjectParameter("LANG", typeof(string));
    
            var eMAIParameter = eMAI != null ?
                new ObjectParameter("EMAI", eMAI) :
                new ObjectParameter("EMAI", typeof(string));
    
            var tELEParameter = tELE != null ?
                new ObjectParameter("TELE", tELE) :
                new ObjectParameter("TELE", typeof(string));
    
            var fAXNParameter = fAXN != null ?
                new ObjectParameter("FAXN", fAXN) :
                new ObjectParameter("FAXN", typeof(string));
    
            var uFFIParameter = uFFI != null ?
                new ObjectParameter("UFFI", uFFI) :
                new ObjectParameter("UFFI", typeof(string));
    
            var rIF1Parameter = rIF1 != null ?
                new ObjectParameter("RIF1", rIF1) :
                new ObjectParameter("RIF1", typeof(string));
    
            var rIF2Parameter = rIF2 != null ?
                new ObjectParameter("RIF2", rIF2) :
                new ObjectParameter("RIF2", typeof(string));
    
            var tELE2Parameter = tELE2 != null ?
                new ObjectParameter("TELE2", tELE2) :
                new ObjectParameter("TELE2", typeof(string));
    
            var aDR_IDParameter = aDR_ID.HasValue ?
                new ObjectParameter("ADR_ID", aDR_ID) :
                new ObjectParameter("ADR_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<db_CO01UT>("f_GetAllFieldsFromCO01UT_BySomeEqualFields", iDParameter, uTENParameter, tIPUParameter, pASSParameter, pWGGParameter, pWSCParameter, nOMEParameter, lANGParameter, eMAIParameter, tELEParameter, fAXNParameter, uFFIParameter, rIF1Parameter, rIF2Parameter, tELE2Parameter, aDR_IDParameter);
        }
    
        public virtual int f_InsertIntoCO01UT(Nullable<System.Guid> iD, string uTEN, string tIPU, string pASS, Nullable<short> pWGG, Nullable<System.DateTime> pWSC, string nOME, string lANG, string eMAI, string tELE, string fAXN, string uFFI, string rIF1, string rIF2, string tELE2, Nullable<System.Guid> aDR_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var uTENParameter = uTEN != null ?
                new ObjectParameter("UTEN", uTEN) :
                new ObjectParameter("UTEN", typeof(string));
    
            var tIPUParameter = tIPU != null ?
                new ObjectParameter("TIPU", tIPU) :
                new ObjectParameter("TIPU", typeof(string));
    
            var pASSParameter = pASS != null ?
                new ObjectParameter("PASS", pASS) :
                new ObjectParameter("PASS", typeof(string));
    
            var pWGGParameter = pWGG.HasValue ?
                new ObjectParameter("PWGG", pWGG) :
                new ObjectParameter("PWGG", typeof(short));
    
            var pWSCParameter = pWSC.HasValue ?
                new ObjectParameter("PWSC", pWSC) :
                new ObjectParameter("PWSC", typeof(System.DateTime));
    
            var nOMEParameter = nOME != null ?
                new ObjectParameter("NOME", nOME) :
                new ObjectParameter("NOME", typeof(string));
    
            var lANGParameter = lANG != null ?
                new ObjectParameter("LANG", lANG) :
                new ObjectParameter("LANG", typeof(string));
    
            var eMAIParameter = eMAI != null ?
                new ObjectParameter("EMAI", eMAI) :
                new ObjectParameter("EMAI", typeof(string));
    
            var tELEParameter = tELE != null ?
                new ObjectParameter("TELE", tELE) :
                new ObjectParameter("TELE", typeof(string));
    
            var fAXNParameter = fAXN != null ?
                new ObjectParameter("FAXN", fAXN) :
                new ObjectParameter("FAXN", typeof(string));
    
            var uFFIParameter = uFFI != null ?
                new ObjectParameter("UFFI", uFFI) :
                new ObjectParameter("UFFI", typeof(string));
    
            var rIF1Parameter = rIF1 != null ?
                new ObjectParameter("RIF1", rIF1) :
                new ObjectParameter("RIF1", typeof(string));
    
            var rIF2Parameter = rIF2 != null ?
                new ObjectParameter("RIF2", rIF2) :
                new ObjectParameter("RIF2", typeof(string));
    
            var tELE2Parameter = tELE2 != null ?
                new ObjectParameter("TELE2", tELE2) :
                new ObjectParameter("TELE2", typeof(string));
    
            var aDR_IDParameter = aDR_ID.HasValue ?
                new ObjectParameter("ADR_ID", aDR_ID) :
                new ObjectParameter("ADR_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_InsertIntoCO01UT", iDParameter, uTENParameter, tIPUParameter, pASSParameter, pWGGParameter, pWSCParameter, nOMEParameter, lANGParameter, eMAIParameter, tELEParameter, fAXNParameter, uFFIParameter, rIF1Parameter, rIF2Parameter, tELE2Parameter, aDR_IDParameter);
        }
    
        public virtual int f_UpdateAllFieldsFromCO01UT_ByKeyFields(Nullable<System.Guid> iD, string uTEN, string tIPU, string pASS, Nullable<short> pWGG, Nullable<System.DateTime> pWSC, string nOME, string lANG, string eMAI, string tELE, string fAXN, string uFFI, string rIF1, string rIF2, string tELE2, Nullable<System.Guid> aDR_ID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(System.Guid));
    
            var uTENParameter = uTEN != null ?
                new ObjectParameter("UTEN", uTEN) :
                new ObjectParameter("UTEN", typeof(string));
    
            var tIPUParameter = tIPU != null ?
                new ObjectParameter("TIPU", tIPU) :
                new ObjectParameter("TIPU", typeof(string));
    
            var pASSParameter = pASS != null ?
                new ObjectParameter("PASS", pASS) :
                new ObjectParameter("PASS", typeof(string));
    
            var pWGGParameter = pWGG.HasValue ?
                new ObjectParameter("PWGG", pWGG) :
                new ObjectParameter("PWGG", typeof(short));
    
            var pWSCParameter = pWSC.HasValue ?
                new ObjectParameter("PWSC", pWSC) :
                new ObjectParameter("PWSC", typeof(System.DateTime));
    
            var nOMEParameter = nOME != null ?
                new ObjectParameter("NOME", nOME) :
                new ObjectParameter("NOME", typeof(string));
    
            var lANGParameter = lANG != null ?
                new ObjectParameter("LANG", lANG) :
                new ObjectParameter("LANG", typeof(string));
    
            var eMAIParameter = eMAI != null ?
                new ObjectParameter("EMAI", eMAI) :
                new ObjectParameter("EMAI", typeof(string));
    
            var tELEParameter = tELE != null ?
                new ObjectParameter("TELE", tELE) :
                new ObjectParameter("TELE", typeof(string));
    
            var fAXNParameter = fAXN != null ?
                new ObjectParameter("FAXN", fAXN) :
                new ObjectParameter("FAXN", typeof(string));
    
            var uFFIParameter = uFFI != null ?
                new ObjectParameter("UFFI", uFFI) :
                new ObjectParameter("UFFI", typeof(string));
    
            var rIF1Parameter = rIF1 != null ?
                new ObjectParameter("RIF1", rIF1) :
                new ObjectParameter("RIF1", typeof(string));
    
            var rIF2Parameter = rIF2 != null ?
                new ObjectParameter("RIF2", rIF2) :
                new ObjectParameter("RIF2", typeof(string));
    
            var tELE2Parameter = tELE2 != null ?
                new ObjectParameter("TELE2", tELE2) :
                new ObjectParameter("TELE2", typeof(string));
    
            var aDR_IDParameter = aDR_ID.HasValue ?
                new ObjectParameter("ADR_ID", aDR_ID) :
                new ObjectParameter("ADR_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_UpdateAllFieldsFromCO01UT_ByKeyFields", iDParameter, uTENParameter, tIPUParameter, pASSParameter, pWGGParameter, pWSCParameter, nOMEParameter, lANGParameter, eMAIParameter, tELEParameter, fAXNParameter, uFFIParameter, rIF1Parameter, rIF2Parameter, tELE2Parameter, aDR_IDParameter);
        }
    
        public virtual ObjectResult<db_VW_USER_TOKEN> GetViewUserToken(string tOKEN)
        {
            var tOKENParameter = tOKEN != null ?
                new ObjectParameter("TOKEN", tOKEN) :
                new ObjectParameter("TOKEN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<db_VW_USER_TOKEN>("GetViewUserToken", tOKENParameter);
        }
    
        public virtual int DeleteToken(string tOKEN)
        {
            var tOKENParameter = tOKEN != null ?
                new ObjectParameter("TOKEN", tOKEN) :
                new ObjectParameter("TOKEN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteToken", tOKENParameter);
        }
    
        public virtual ObjectResult<f_GetAllFieldsFromCO_TOKEN_ByKeyFields_Result> f_GetAllFieldsFromCO_TOKEN_ByKeyFields(string tOKEN)
        {
            var tOKENParameter = tOKEN != null ?
                new ObjectParameter("TOKEN", tOKEN) :
                new ObjectParameter("TOKEN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<f_GetAllFieldsFromCO_TOKEN_ByKeyFields_Result>("f_GetAllFieldsFromCO_TOKEN_ByKeyFields", tOKENParameter);
        }
    
        public virtual ObjectResult<db_CO_TOKEN> f_GetAllFieldsFromCO_TOKEN_BySomeEqualFields(string tOKEN, Nullable<System.DateTime> dATA_CREAZIONE, Nullable<System.DateTime> dATA_ULTIMO_UTILIZZO, Nullable<System.DateTime> dATA_SCADENZA, string uSERNAME)
        {
            var tOKENParameter = tOKEN != null ?
                new ObjectParameter("TOKEN", tOKEN) :
                new ObjectParameter("TOKEN", typeof(string));
    
            var dATA_CREAZIONEParameter = dATA_CREAZIONE.HasValue ?
                new ObjectParameter("DATA_CREAZIONE", dATA_CREAZIONE) :
                new ObjectParameter("DATA_CREAZIONE", typeof(System.DateTime));
    
            var dATA_ULTIMO_UTILIZZOParameter = dATA_ULTIMO_UTILIZZO.HasValue ?
                new ObjectParameter("DATA_ULTIMO_UTILIZZO", dATA_ULTIMO_UTILIZZO) :
                new ObjectParameter("DATA_ULTIMO_UTILIZZO", typeof(System.DateTime));
    
            var dATA_SCADENZAParameter = dATA_SCADENZA.HasValue ?
                new ObjectParameter("DATA_SCADENZA", dATA_SCADENZA) :
                new ObjectParameter("DATA_SCADENZA", typeof(System.DateTime));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<db_CO_TOKEN>("f_GetAllFieldsFromCO_TOKEN_BySomeEqualFields", tOKENParameter, dATA_CREAZIONEParameter, dATA_ULTIMO_UTILIZZOParameter, dATA_SCADENZAParameter, uSERNAMEParameter);
        }
    
        public virtual int f_InsertIntoCO_TOKEN(string tOKEN, Nullable<System.DateTime> dATA_CREAZIONE, Nullable<System.DateTime> dATA_ULTIMO_UTILIZZO, Nullable<System.DateTime> dATA_SCADENZA, string uSERNAME)
        {
            var tOKENParameter = tOKEN != null ?
                new ObjectParameter("TOKEN", tOKEN) :
                new ObjectParameter("TOKEN", typeof(string));
    
            var dATA_CREAZIONEParameter = dATA_CREAZIONE.HasValue ?
                new ObjectParameter("DATA_CREAZIONE", dATA_CREAZIONE) :
                new ObjectParameter("DATA_CREAZIONE", typeof(System.DateTime));
    
            var dATA_ULTIMO_UTILIZZOParameter = dATA_ULTIMO_UTILIZZO.HasValue ?
                new ObjectParameter("DATA_ULTIMO_UTILIZZO", dATA_ULTIMO_UTILIZZO) :
                new ObjectParameter("DATA_ULTIMO_UTILIZZO", typeof(System.DateTime));
    
            var dATA_SCADENZAParameter = dATA_SCADENZA.HasValue ?
                new ObjectParameter("DATA_SCADENZA", dATA_SCADENZA) :
                new ObjectParameter("DATA_SCADENZA", typeof(System.DateTime));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_InsertIntoCO_TOKEN", tOKENParameter, dATA_CREAZIONEParameter, dATA_ULTIMO_UTILIZZOParameter, dATA_SCADENZAParameter, uSERNAMEParameter);
        }
    
        public virtual int f_UpdateAllFieldsFromCO_TOKEN_ByKeyFields(string tOKEN, Nullable<System.DateTime> dATA_CREAZIONE, Nullable<System.DateTime> dATA_ULTIMO_UTILIZZO, Nullable<System.DateTime> dATA_SCADENZA, string uSERNAME)
        {
            var tOKENParameter = tOKEN != null ?
                new ObjectParameter("TOKEN", tOKEN) :
                new ObjectParameter("TOKEN", typeof(string));
    
            var dATA_CREAZIONEParameter = dATA_CREAZIONE.HasValue ?
                new ObjectParameter("DATA_CREAZIONE", dATA_CREAZIONE) :
                new ObjectParameter("DATA_CREAZIONE", typeof(System.DateTime));
    
            var dATA_ULTIMO_UTILIZZOParameter = dATA_ULTIMO_UTILIZZO.HasValue ?
                new ObjectParameter("DATA_ULTIMO_UTILIZZO", dATA_ULTIMO_UTILIZZO) :
                new ObjectParameter("DATA_ULTIMO_UTILIZZO", typeof(System.DateTime));
    
            var dATA_SCADENZAParameter = dATA_SCADENZA.HasValue ?
                new ObjectParameter("DATA_SCADENZA", dATA_SCADENZA) :
                new ObjectParameter("DATA_SCADENZA", typeof(System.DateTime));
    
            var uSERNAMEParameter = uSERNAME != null ?
                new ObjectParameter("USERNAME", uSERNAME) :
                new ObjectParameter("USERNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_UpdateAllFieldsFromCO_TOKEN_ByKeyFields", tOKENParameter, dATA_CREAZIONEParameter, dATA_ULTIMO_UTILIZZOParameter, dATA_SCADENZAParameter, uSERNAMEParameter);
        }
    }
}
